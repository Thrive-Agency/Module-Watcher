name: Build Test and Release Watch Modules Plugin

on:
  push:
    branches:
      - main

env:
  SKIP_TESTS: true

jobs:
  tests:
    if: vars.SKIP_TESTS == 'false'
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wp_test
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Zipping plugin
        run: |
          mkdir -p release
          cd module-watch
          zip -r ../release/module-watch.zip ./*

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4' # Change this to match current supported version
      
  
      - name: Wait for MySQL to be ready
        run: sleep 20

      - name: Start MySQL service and Create Database
        run: |
          mysql -h 127.0.0.1 -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS wp_test;'


      - name: Download and Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Verify WP-CLI Installation
        run: |
          wp --info
  

      - name: Set up WordPress
        run: |
          wp core download --path=/tmp/wordpress
          wp config create --dbname=wp_test --dbuser=root --dbpass='password' --dbhost=127.0.0.1 --path=/tmp/wordpress
          wp core install --url=http://localhost:8080 --title="Test Site" --admin_user=admin --admin_password=admin --admin_email=admin@example.com --path=/tmp/wordpress
          wp server --path=/tmp/wordpress &

      - name: Install and Activate Plugin
        run: |
          wp plugin install release/module-watch.zip --activate --path=/tmp/wordpress
          wp plugin is-installed module-watch --path=/tmp/wordpress

      - name: Check Plugin Activation
        run: |
          wp plugin is-active module-watch --path=/tmp/wordpress
          # Add other tests or PHPUnit tests to verify the plugin is running correctly

      - name: Check WordPress server response after plugin activation
        run: |
          sleep 5
          curl -I http://localhost:8080 | grep "200 OK"
  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Zipping plugin
        run: |
          mkdir -p release
          zip -r release/module-watch.zip module-watch

      - name: Create info.json
        run: |
          PLUGIN_VERSION=$(grep 'Version:' module-watch/module-watch.php | awk '{print $3}')
          CHANGELOG=$(cat CHANGELOG.md | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          cat  <<EOF > release/info.json
          {
            
            "name" : "Module Watch",
            "slug" : "module-watch",
            "author" : "<a href='https://thriveagency.com'>Thrive Agency</a>",
            "version": "$PLUGIN_VERSION"
            "requires" : "3.0",
            "tested" : "5.8",
            "requires_php" : "5.3",
            "last_updated" : "$(date +'%Y-%m-%d %H:%M:%S')",
            "sections" : {
              "description" : "Plugin for monitoring for bad plugins.",
              "installation" : "Click the activate button",
              "changelog" : "$CHANGELOG"
            },
            "banners" : {
              "low" : "https://thriveagency.com/test.jpg",
              "high" : "https://thriveagency.com/test.jpg"
            }
          }
          EOF
      
      - name: copy using key
        uses: srueda99/scp-action@v12
        with:
          port: 22
          host: ${{ secrets.CLOUDWAYS_HOST }}
          destination: ${{ secrets.CLOUDWAYS_PATH  }}/"
          username: ${{ secrets.CLOUDWAYS_USER }}
          key: ${{ secrets.CLOUDWAYS_SSH_PRIVATE_KEY }}
      
      - name: Verify Upload
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.CLOUDWAYS_USER }}@${{ secrets.CLOUDWAYS_HOST }} "\
          [ -f ${{ secrets.CLOUDWAYS_PATH }}/release/module-watch.zip ] && \
          [ -f ${{ secrets.CLOUDWAYS_PATH }}/release/info.json ] && \
          echo 'Files successfully uploaded' || { echo 'Upload failed'; exit 1; }"